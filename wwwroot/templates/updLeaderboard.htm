CREATE PROCEDURE `updLeaderboard`(	  )
BEGIN

	declare in_height float;
	declare in_lastsolved float;
	declare in_MinerCount float;
    declare in_HashRate0 float;
    declare in_HashRate1 float;
    declare in_HashRate2 float;
	declare in_heightL float;


	set in_height = (Select max(height) from tbl_share);
    set in_lastsolved = (Select max(height) from tbl_share WHERE height < in_height and solved=1);


	DROP TABLE IF EXISTS Leaderboard;

	CREATE TABLE Leaderboard (bbpaddress varchar(128) primary key,shares float,fails float,sucXMR float,FailXMR float, sucXMRC float, Updated datetime,Height int, BXMR float,
    BXMRC float, Efficiency float,Hashrate float);

    INSERT INTO Leaderboard
	SELECT
    bbpaddress,sum(shares) shares,sum(fails) fails,
	sum(SucXMR) sucXMR, sum(FailXMR) + sum(FailXMRC) as FailXMR, sum(SucXMRC) as sucXMRC,
	max(updated) Updated, max(height) Height,   sum(BXMR) BXMR, sum(BXMRC) BXMRC,
	Round(100 - (sum(fails)/(sum(shares)+sum(BXMR)+.01)* 100), 2) as Efficiency
	,(sum(shares) + sum(BXMR)) * 50 as Hashrate
	FROM tbl_share WHERE height >= in_height-5
	GROUP BY bbpaddress;

	Update Leaderboard set efficiency = 0 where efficiency < 0;


IF (SELECT RAND()*100 < 5) THEN
    BEGIN
	delete from tbl_share where TIMESTAMPDIFF(MINUTE, updated, now()) > 30*1440;
	delete from tbl_share where bbpaddress = '';
	delete from tbl_hashrate where TIMESTAMPDIFF(MINUTE, Added, now()) > 7*1440;
    delete from tbl_worker Where TIMESTAMPDIFF(MINUTE, Added, now()) > 2*1440;
    delete from bandetails where TIMESTAMPDIFF(MINUTE, Added, now()) > 1*1440;
    END;
END IF;


set in_MinerCount = (Select count(bbpaddress) from Leaderboard);
set in_HashRate1 = (Select sum(hashrate) from Leaderboard);
set in_HashRate2 = (Select avg(IFNULL(hashRate,0)) from tbl_hashrate where TIMESTAMPDIFF(MINUTE, Added, now()) > 60);
set in_HashRate0 = (in_HashRate1 + in_HashRate2) / 2;
set in_heightL = (Select max(height) from Leaderboard);

Insert into tbl_hashrate (id,MinerCount,HashRate,Added,Height) values (uuid(), in_MinerCount, in_HashRate0, now(), in_heightL);

Update tbl_hashrate Set SolvedCount = (Select count(distinct Height) From tbl_share
  where tbl_share.Height > in_heightL-205 and tbl_share.Height < in_heightL and subsidy > .05) where tbl_hashrate.Height = in_heightL;


END;
