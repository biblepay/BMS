
<!DOCTYPE html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link href="https://fonts.googleapis.com/css?family=Sofia" rel="stylesheet">
    <script src="/assets/bbp/hls.js"></script>
    <script src="/assets/bbp/plyr.polyfilled.js"></script>
    <script src="/assets/bbp/plyr-plugin-thumbnail.js"></script>
    <script type="text/javascript" src="/assets/bbp/jquery.min.js"></script>
    <script src="/assets/bbp/chartist.min.js" type="text/javascript"></script>
    <script src="/assets/bbp/plyr-vr.js" type="text/javascript"></script>
    <link rel="stylesheet" href="/assets/bbp/plyr.css">
    <link rel="stylesheet" href="/assets/bbp/plyr-vr.css">
    <script src="/assets/bbp/pb.js?v=2"></script>
    <link rel="stylesheet" href="/assets/bbp/pb.css?v=1">
    <link rel="stylesheet" href="/assets/bbp/bbpvideotheme.css">
    <meta property="og:site_name" content="biblepay" />
    <meta property="og:title" content="video-title-1665503523.mp4" />
    <meta property="og:type" content="video.other" />
    <meta property="og:video:type" content="video/mp4" />
    <meta property="og:video:width" content="640">
    <meta property="og:video:height" content="360">
    <meta property="video:duration" content="739">

<style>
</style>

</head>
<body id="body">


<!--
<?php
    require_once('assets/init.php');
    header("X-Frame-Options: *");
    $post = GetWoPostData($_GET['embedid']);
    $tz = GetTimeZone();
    if ($_GET['vembedid'])
    {
    $poster = $s3_site_url . '/video/' . $_GET['vembedid'] . '/p.jpg';
    $url = $s3_site_url . '/video/' . $_GET['vembedid'].'/1.m3u8';
    }
    else
    {
    $poster = $s3_site_url . '/' . $post['postFileThumb'];
    $url = $s3_site_url . '/video/' . $post['postFileName'];
    }
?>
-->


	<div class="container" id="video-container">
		<svg viewBox="0 0 0 0" style="height: 0; width: 0; display: block;">
		  <defs>
			<linearGradient id="gradient-a" x2="0%" y2="100%">
         		  <stop offset="0%" stop-color="#abababaf"></stop>
		          <stop offset="30%" stop-color="#ababab8f"></stop>
			  <stop offset="70%" stop-color="#ababab5f"></stop>
			  <stop offset="100%" stop-color="#ababab33"></stop>
			</linearGradient>
			<linearGradient id="gradient-active" x2="0%" y2="100%">
			  <stop offset="0%" stop-color="#cc0000af"></stop>
		          <stop offset="30%" stop-color="#cc00008f"></stop>
			  <stop offset="70%" stop-color="#cc00003f"></stop>
			  <stop offset="100%" stop-color="#cc000013"></stop>
			</linearGradient>
		  </defs>
		</svg>
		<video preload="auto" controls crossorigin xautoplay none   data-plyr-config='{ "title": "700-1665503523.mp4" }' playsinline webkit-playsinline data-poster="<?php echo $poster?>">
				<source src="<?php echo $url?>" />
    	</video>
	</div>

	<script>


function URLExists(url, cb){
    jQuery.ajax({
        url:      url,
        dataType: 'text',
        type:     'GET',
        complete:  function(xhr){
            if(typeof cb === 'function')
               cb.apply(this, [xhr.status]);
        }
    });
}

function st1()
{
   var sURL='https://bbpnyc.b-cdn.net/769317d3f877b629d04951d54de908d3f41879903af84edbc536959f849335f5/1.m3u8';
   URLExists(sURL, function(status) {
      if (status===200) {
          console.log('file found');
      }
      else
      {
         console.log('file not found');
      }
   });
}


		function IsMobile() {
			let check = false;
			(function (a) { if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);
			return check;
		}

		document.addEventListener("DOMContentLoaded", function () {
			var video = document.querySelector("video");
			var fragmentsLoaded = 0;
			var player = null;
			var isHlsSupported = Hls.isSupported();
			var source = video.getElementsByTagName("source")[0].src;

			function initPlayer()
			{
				$('<div class="plyr__controls__item plyr__spacer"></div>').insertBefore(".plyr__progress__container");

				player.on("play", function () {
					console.log('playing...');
				});
				player.on("pause", function () {
				});
				setInterval(function ()
				{
					console.log('skipping...');
				}, 5900);

				/* Progress bar */
				var scrubbingPaused = false;
				var isMobile = IsMobile();
				$(".plyr__progress__container input").css("top", "-5px");
				$(".plyr__progress__container progress").css("top", "4px");
				$(".plyr__progress__container progress").css("opacity", "0.01");
				$(".plyr__progress").prepend($('<div class="plyr__pb"></div>'));
				var pb = new PB(".plyr__pb", ".plyr__progress__container input", {
					keyColor: "#cc0000",
					videoLength: 739,
					chapters: [

					],
					moments: [

					],
					onScrubbingChange: function(seekTime, offset) {
						var thumbWidth = $(".plyr__preview-thumb").width();
                        var position = Math.max(thumbWidth / 2, offset);
                        position = Math.min($(".plyr__controls").width() - $(".plyr__preview-thumb").width() + (thumbWidth / 4), position);
						$(".plyr__preview-thumb").css("left", (position - 5.5) + "px");
					}
				});
				player.on("loadedmetadata", function () {
					pb.SetDuration(player.duration);
				});

				setInterval(function () {
					pb.SetCurrentProgress(player.currentTime);
					pb.SetBufferProgress(player.duration * player.buffered);
				}, 16);

				/* Progress bar */
				function getStatusObject() {
					return {
						volume: player.volume,
						muted: player.muted,
						hideControls: player.hideControls,
						speed: player.speed,
						quality: player.quality,
						currentTime: player.currentTime,
						playing: player.playing,
						paused: player.paused,
						stopped: player.stopped,
						ended: player.ended,
						buffered: player.buffered,
						duration: player.duration,
						hasAudio: player.hasAudio,
						loop: player.loop,
						language: player.language,
						ratio: player.ratio,
					};
                }

				function sendEvent(name)
				{
					//noop
				}

				function wireEvent(name) {
					player.on(name, function () { sendEvent(name)});
                }

				function wireUpEvents()
				{
					wireEvent("progress");
					wireEvent("ready");
					wireEvent("play");
					wireEvent("pause");
					wireEvent("timeupdate");
					wireEvent("seeking");
					wireEvent("seeked");
					wireEvent("ended");
					wireEvent("ratechange");
					wireEvent("enterfullscreen");
					wireEvent("exitfullscreen");
					wireEvent("captionsenabled");
					wireEvent("captionsdisabled");
					wireEvent("languagechange");
					wireEvent("ready");
                                }

				window.onmessage = function(e)
				{
					var message = e.data;
					if (message.command == 'activate')
					{
						wireUpEvents();
					}
					else if (message.command == 'pause') {
						player.pause();
					}
					else if (message.command == 'play') {
						player.play();
					}
					else if (message.command == 'togglePlay') {
						if (message.parameter != null)
							player.togglePlay(message.parameter);
						else
							player.togglePlay();
					}
					else if (message.command == 'destroy') {
						player.destroy();
					}
					else if (message.command == 'increaseVolume') {
						if (message.parameter != null)
							player.increaseVolume(message.parameter);
						else
							player.increaseVolume(0.1);
					}
					else if (message.command == 'decreaseVolume') {
						if (message.parameter != null)
							player.decreaseVolume(message.parameter);
						else
							player.decreaseVolume(0.1);
					}
					else if (message.command == 'toggleCaptions') {
						if (message.parameter != null)
							player.toggleCaptions(message.parameter);
						else
							player.toggleCaptions();
					}
					else if (message.command == 'toggleControls') {
						if (message.parameter != null)
							player.toggleControls(message.parameter);
						else
							player.toggleControls();
					}
					else if (message.command == 'fullscreen.enter') {
						player.fullscreen.enter();
					}
					else if (message.command == 'fullscreen.exit') {
						player.fullscreen.exit();
					}
					else if (message.command == 'fullscreen.toggle') {
						player.fullscreen.toggle();
					}
					else if (message.command == 'forward') {
						if (message.parameter != null)
							player.forward(message.parameter);
						else
							player.forward();
					}
					else if (message.command == 'rewind') {
						if (message.parameter != null)
							player.rewind(message.parameter);
						else
							player.rewind();
					}
				};
            }


			var defaultOptions = {
                fullscreen: {
                    enabled: true,
                    fallback: true,
                    iosNative: true
				},
                xiconUrl: 'https://social.biblepay.org/assets/bbp/playicon.svg',
                iconUrl: 'https://bunnycdn-video-assets.b-cdn.net/plyr.svg',
                captions: { active: false, language: '', update: true },
				controls: [
					"play-large","play","rewind","fast-forward","progress","current-time","duration","volume","captions","settings","pip","fullscreen"
				],
				speed: { selected: 1, options: [0.5,0.75,1,1.25,1.5,1.75,2,4] },
				i18n: {
    restart: 'Restart',
    rewind: 'Rewind {seektime}s',
    play: 'Play',
    pause: 'Pause',
    fastForward: 'Forward {seektime}s',
    seek: 'Seek',
    seekLabel: '{currentTime} of {duration}',
    played: 'Played',
    buffered: 'Buffered',
    currentTime: 'Current time',
    duration: 'Duration',
    volume: 'Volume',
    mute: 'Mute',
    unmute: 'Unmute',
    enableCaptions: 'Enable captions',
    disableCaptions: 'Disable captions',
    download: 'Download',
    enterFullscreen: 'Enter fullscreen',
    exitFullscreen: 'Exit fullscreen',
    frameTitle: 'Player for {title}',
    captions: 'Captions',
    settings: 'Settings',
    pip: 'PIP',
    menuBack: 'Go back to previous menu',
    speed: 'Speed',
    normal: 'Normal',
    quality: 'Quality',
    loop: 'Loop',
    start: 'Start',
    end: 'End',
    all: 'All',
    reset: 'Reset',
    disabled: 'Disabled',
    enabled: 'Enabled',
    advertisement: 'Ad',
    qualityBadge: {
      2160: '4K',
      1440: 'HD',
      1080: 'HD',
      720: 'HD',
      576: 'SD',
      480: 'SD',
    },
},
				thumbnail: {
					enabled: false,
					pic_num: 376,// total thumbnail numbers
					width: 300,// per thumbnail item width
					height: 168,// per thumbnail item height
                    col: 6,// per thumbnail image columns
					row: 6,// per thumbnail image rows
                    offsetX: 0,
                    offsetY: 0,
                    urls: [

                        '<?php echo $poster?>',
                    ]
                },

			};

				if (isHlsSupported) {
					var hlsConfig = {
						abrEwmaDefaultEstimate: 5000000,
						maxBufferLength: 120,
                                                minBufferLength: 20,
						autoStartLoad: true,
					};
					var hls = new Hls(hlsConfig);
					console.log('sc ' + source);
					
					hls.loadSource(source);

					// From the m3u8 playlist, hls parses the manifest and returns
					// all available video qualities. This is important, in this approach,
					// we will have one source on the Plyr player.
					hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {

						if (window.hls.currentLevel == -1)
						{
							// Auto
							if(hls.levels.length == 1) {
								window.hls.currentLevel = 0;
							}
							else if(hls.levels.length == 2) {
								window.hls.currentLevel = 1;
							}
							else {
								window.hls.currentLevel = 2;
							}
						}

						// Transform available levels into an array of integers (height values).
						var availableQualities = hls.levels.map(function (l) { return l.height });
						availableQualities.unshift(0) //prepend 0 to quality array;

						// Add new qualities to option
						defaultOptions.quality = {
							default: 0,
							options: availableQualities,
							// this ensures Plyr to use Hls to update quality level
							forced: true,
							onChange: function (e) { updateQuality(e); },
						}

						// Initialize here
						player = new Plyr(video, defaultOptions);
						initPlayer();

					});
					hls.on(Hls.Events.LEVEL_SWITCHED, function (event, data)
					{
						var span = document.querySelector(".plyr__controls [data-plyr='quality'][value='0'] span")
						if (span != null)
						{
							if (hls.autoLevelEnabled) {
								var height = hls.levels[data.level].height;
								span.innerHTML = 'Auto (' + height + 'p)'
							} else {
								span.innerHTML = 'Auto'
							}
						}
					});


					hls.on(Hls.Events.BUFFER_STALLED_ERROR , function (event, data) {
					    console.log('stalled error');
						bufferedEvents++;
					});

					setInterval(function() {
						var bandwidth = hls.abrController.bwEstimator.getEstimate();
						if (isNaN(bandwidth)) {
							bandwidth = 0;
						}
						if (!video.paused)
						{
							// Reserved for metrics : loadUrl("https://bbpmetrics/add?bufferErrors=" + bufferedEvents + "&bandwidth=" + bandwidth + "&zoneTier=" + 'volume', function (data) { });
							bufferedEvents = 0;
                        }
					}, 15000);
                    console.log('playing as hls');
					hls.attachMedia(video);
					window.hls = hls;
				}
				else {
					defaultOptions.quality = {
						default: 480,
						options: [240, 320, 480, 720]
					};

					player = new Plyr(video, defaultOptions);
					console.log('playing as mp4');
					initPlayer();
				}


			function updateQuality(newQuality) {
                if (newQuality === 0) {
                    window.hls.currentLevel = -1; //Enable AUTO quality if option.value = 0
                } else {
                    window.hls.levels.forEach(function (level, levelIndex) {
                        if (level.height === newQuality) {
                            console.log("Found quality match with " + newQuality);
                            window.hls.currentLevel = levelIndex;
                        }
                    });
                }
			};
		});

        function centerVertically() {
            var container = document.getElementById("body");
            var inner = document.getElementById("video-container");

            var inHeight = inner.offsetHeight;
            var conHeight = container.offsetHeight;

            inner.style.marginTop = ((conHeight - inHeight) / 2) + 'px';
        }
        centerVertically();
		window.addEventListener("resize", centerVertically);
	</script>
</body>


